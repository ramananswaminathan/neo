id;name;targetset
1;"neo1";["create (n:Student{name: "Bill",age:19}) return n","create (n:Student:Teacher{name: "Tim",age:29}) return n,"match (n:Student) return n,"match (d:Student) return d.name,d.age"]
2;"neo2";[":history","match (n:Student {name:"Tim"}) return n","match (n:Student {name:"Tim"})","merge (n:Student {name:"Tim"})","merge (n:Student {name:"Tim"}) on create set n.name="Tim" on match set n.nickname=["Timy","Timothy"] return n","merge (n:Student {name:"Tim"}) on create set n.name="Tim" on merge set n.nickname=["Timy","Timothy"] return n","merge (n:Student {name:"Tim"}) on create set n.name="Tim" return n","match (n) return n","merge (n:Student {name:"Bill",age:29}) return n","match (n) return n","match (n:Student) delete n","match (n:Student) where n.name="Bill" return n","match (n:Student) where n.name="Bill" remove n.student return n","match (n:Student) where n.name="Tim" remove n.address return n","match (n:Student) where n.name="Tim" set n.address="123,10th cross streetkangasabai nagarchidambaram" return n","match (n:Student) where n.name="Tim" set n.nickname=["Timothy","Jean"] return n","match (n:Student {name:"Bill"}) set n.nickname=["Billy","Jean"] return n","match (n:Student {name:"Bill"}) set n.nickname={["Billy","Jean"]}) return n","match (n:Student {name:"Bill"}) set n.nickname:["Billy","Jean"]) return n","match (n:Student {name:"Bill"}) set n.nickname=["Billy","Jean"]) return n","match (n:Student) where n.name="Bill" set n.nickname=["Billy","Jean"]) return n","match (n:Student) where n.name="Bill" set n.nickname:["Billy","Jean"]) return n","create (n:Student {name:"sw",age:39,nickname:["swami","nathan"]}) return n","create (n:Student {name:"sw",age:39,nickname["swami","nathan"]}) return n","create (n:Student {name:"sw",age:39,nickname["swami","nathan"]})","match (n:Student) where n.name="Bill" and n.age=19 return n.name","match (n:Student) where n.name="Bill" and n.age=19 return n","match (n:Student) where n.name="Bill" and n.age=21 return n"]
3;"neo3";"match (ji:Student {name:"Swami"})return ji", "match (ja:Student {name:"nathan"}) merge (da:Student{name:"Rod",age:45}) merge (ji)-[r1:Colleague]->(da) merge (da)-[r2:Colleague]->(ji) return ji,r1,r2,da,ja","match (ji:Student {name:"Swami"}), (ja:Student {name:"nathan"}) return ji,ja","match (ji:Student {name:"Swami"})-[r]-(ja:Student {name:"nathan"}) set r.type="Classmate" return ji,r,ja","match (ji:Student {name:"Swami"}), (ja:Student {name:"nathan"}) return ji,ja","match (ji:Student {name:"Swami"})-[r]->(ja:Student {name:"nathan"}) set r.type="Classmate" return ji,r,ja","match (ji:Student {name:"Swami"})-[r]->(ja:Student {name:"nathan"}) return ji,r,ja","match (ji:Student {name:"Swami"})-[r:Friend]->(ja:Student {name:"nathan"}) return ji,r,ja","match (ji:Student {name:"Swami"}), (ja:Student {name:"nathan"}) return ji,ja","create p= (a:Student {name:"Swami", age:30})-[r:Freind]-> (b:Student{name:"nathan",age:23})-[s:Friend]->(a) return p","create p= (a:Student {name:"Swami", age:30})-[r:Freind]-> (b:Student{name:"nathan",age:23})-[s:Friend]->(a:Student {name:"Swami", age:30}) return p","create p= (a:Student {name:"Swami", age:30})-[r:Freind]-> (b:Student{name:"nathan",age:23})-[s:Friend]->(a:Student {name:"Swami", age:30}) return p","create p= (a:Student {name:"Swami", age:30})-[r:Freind]-> (b:Student{name:"nathan",age:23})-[s:Friend]->(a:Student {name:"Swami", age:30}) return a,r,s,b","create p= (a:Student {name:"Swami", age:30})-[r:Freind]-> (b:Student{name:"nathan",age:23})-[r:Friend]->(a:Student {name:"Swami", age:30}) return a,r,b","match (ji:Student {name:"Jim"}), (ja:Student {name:"James"}) return ji,ja","match (ji:Student {name:"Jim"})-[r]-(ja:Student {name:"James"}) return ji,r,ja","match (ji:Student {name:"Jim"})-[r]-(ja:Student {name:"James"}) delete r","match (ji:Student {name:"Jim"}) match (ja:Student {name:"James"}) merge ((ji)-[r:CLASSMATE]->(ja)) merge ((ji)<-[s:FRIEND]-(ja)) return ji,r,s,ja","match (ji:Student {name:"Jim"}) match (ja:Student {name:"James"}) merge ((ji)-[r:CLASSMATE]->(ja)) merge ((ji)<-[r:FRIEND]-(ja)) return ji,r,s,ja","match (ji:Student {name:"Jim"}) match (ja:Student {name:"James"}) merge ((ji)-[r:CLASSMATE]->(ja)) return ji,r,s,ja","match (ji:Student {name:"Jim"}) match (ja:Student {name:"James"}) merge ((ji)-[r:FRIEND]->(ja)) merge ((ja)-[s:FRIEND]->(ji)) return ji,r,s,ja","match (ji:Student {name:"Jim"})-[r]-(ja:Student {name:"James"}) return ji,r,ja","match (ji:Student {name:"Jim"})-[r]-(ja:Student {name:"James"}) delete r","match (ji:Student {name:"Jim"})-[r]-(ja:Student {name:"James"}) return ji,r,ja","match (ji:Student {name:"Jim"})<-[r]-(ja:Student {name:"James"}) return ji,r,ja","match (ji:Student {name:"Jim"})<-[r]-(ja:Student {name:"James"}) delete r","match (ji:Student {name:"Jim"})<-[r]-(ja:Student {name:"James"}) return ji,r,ja","match (ji:Student {name:"Jim"})-[r]->(ja:Student {name:"James"}) return ji,r,ja","match (ji:Student {name:"Jim"})-[r]-(ja:Student {name:"James"}) return ji,r,ja","match (ji:Student {name:"Jim"})-[:r]-(ja:Student {name:"James"}) return ji,r,ja",
